{"version":3,"file":"component---src-templates-blog-post-js-4c0dc41d12335c3c5318.js","mappings":"2OAOA,MA6DaA,EAAOC,IAAyC,IAAtCC,MAAQC,eAAgBC,IAAQH,EACrD,OACEI,EAAAA,cAACC,EAAAA,EAAG,CACFC,MAAOH,EAAKI,YAAYD,MACxBE,YAAaL,EAAKI,YAAYC,aAAeL,EAAKM,SAClD,EAIN,UAtEyBC,IAGlB,IAADC,EAAA,IAFJV,MAAM,SAAEW,EAAQ,KAAEC,EAAI,KAAEC,EAAMZ,eAAgBC,GAAM,SACpDY,GACDL,EACC,MAAMM,GAA6B,QAAjBL,EAAAG,EAAKG,oBAAY,IAAAN,OAAA,EAAjBA,EAAmBL,QAAK,QAE1C,OACEF,EAAAA,cAACc,EAAAA,EAAM,CAACH,SAAUA,EAAUT,MAAOU,GACjCZ,EAAAA,cAAA,WACEe,UAAU,YACVC,WAAS,EACTC,SAAS,6BAETjB,EAAAA,cAAA,cACEA,EAAAA,cAAA,MAAIkB,SAAS,YAAYnB,EAAKI,YAAYD,OAC1CF,EAAAA,cAAA,SAAID,EAAKI,YAAYgB,OAEvBnB,EAAAA,cAAA,WACEoB,wBAAyB,CAAEC,OAAQtB,EAAKuB,MACxCJ,SAAS,gBAEXlB,EAAAA,cAAA,YAEFA,EAAAA,cAAA,OAAKe,UAAU,iBACbf,EAAAA,cAAA,MACEuB,MAAO,CACLC,QAAQ,OACRC,SAAS,OACTC,eAAe,gBACfC,UAAU,OACVC,QAAS,IAGX5B,EAAAA,cAAA,UACGQ,GACCR,EAAAA,cAAC6B,EAAc,CACbC,GAAItB,EAASuB,OAAOC,KACpBC,IAAI,OACJlB,UAAU,eAETP,EAASL,YAAYD,QAI5BF,EAAAA,cAAA,UACGS,GACCT,EAAAA,cAAC6B,EAAc,CACbC,GAAIrB,EAAKsB,OAAOC,KAChBC,IAAI,OACJlB,UAAU,eAETN,EAAKN,YAAYD,UAMrB,EAeb,MAAM2B,GAAiBK,EAAAA,EAAAA,IAAOC,EAAAA,KAAPD,CAAYE,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,qO","sources":["webpack://gatsby-starter-blog/./src/templates/blog-post.js"],"sourcesContent":["import * as React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\nimport styled from \"styled-components\"\n\nconst BlogPostTemplate = ({\n  data: { previous, next, site, markdownRemark: post },\n  location,\n}) => {\n  const siteTitle = site.siteMetadata?.title || `Title`\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <article\n        className=\"blog-post\"\n        itemScope\n        itemType=\"http://schema.org/Article\"\n      >\n        <header>\n          <h1 itemProp=\"headline\">{post.frontmatter.title}</h1>\n          <p>{post.frontmatter.date}</p>\n        </header>\n        <section\n          dangerouslySetInnerHTML={{ __html: post.html }}\n          itemProp=\"articleBody\"\n        />\n        <hr />\n      </article>\n      <nav className=\"blog-post-nav\">\n        <ul\n          style={{\n            display: `flex`,\n            flexWrap: `wrap`,\n            justifyContent: `space-between`,\n            listStyle: `none`,\n            padding: 0,\n          }}\n        >\n          <li>\n            {previous && (\n              <CustomNextLink\n                to={previous.fields.slug}\n                rel=\"prev\"\n                className=\"controlPage\"\n              >\n                {previous.frontmatter.title}\n              </CustomNextLink>\n            )}\n          </li>\n          <li>\n            {next && (\n              <CustomNextLink\n                to={next.fields.slug}\n                rel=\"next\"\n                className=\"controlPage\"\n              >\n                {next.frontmatter.title}\n              </CustomNextLink>\n            )}\n          </li>\n        </ul>\n      </nav>\n    </Layout>\n  )\n}\n\nexport const Head = ({ data: { markdownRemark: post } }) => {\n  return (\n    <Seo\n      title={post.frontmatter.title}\n      description={post.frontmatter.description || post.excerpt}\n    />\n  )\n}\n\nexport default BlogPostTemplate\n\nconst CustomNextLink = styled(Link)`\n  display: block;\n  text-decoration: none !important;\n  border: 1px solid black;\n  padding: 0.3rem 1rem;\n  border-radius: 4px;\n  transition: 0.2s;\n  &:hover {\n    background-color: black;\n    color: white;\n  }\n`\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug(\n    $id: String!\n    $previousPostId: String\n    $nextPostId: String\n  ) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(id: { eq: $id }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n      }\n    }\n    previous: markdownRemark(id: { eq: $previousPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n    next: markdownRemark(id: { eq: $nextPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n  }\n`\n"],"names":["Head","_ref2","data","markdownRemark","post","React","Seo","title","frontmatter","description","excerpt","_ref","_site$siteMetadata","previous","next","site","location","siteTitle","siteMetadata","Layout","className","itemScope","itemType","itemProp","date","dangerouslySetInnerHTML","__html","html","style","display","flexWrap","justifyContent","listStyle","padding","CustomNextLink","to","fields","slug","rel","styled","Link","_templateObject","_taggedTemplateLiteralLoose"],"sourceRoot":""}